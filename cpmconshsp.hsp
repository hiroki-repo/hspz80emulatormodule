#include "./z80.as"
#runtime "hsp3cl"
#uselib "crtdll.dll"
#cfunc _kbhit "_kbhit"
#cfunc _getch "_getch"
//#packopt name "picoz80pcemu_cpm"
#packopt name "hspcpm"
#pack "z80.as"
//#pack "z80rscpm.hsp"
#epack "CPM.SYS"
#pack "HALT.COM"
sdim dcdcbiosdata,5632
exist "CPM.SYS"
if strsize=-1{}else{
bload "CPM.SYS",dcdcbiosdata
cpmwasloaded=1
}
#ifdef _debug
chdir "cpm"
#endif
var_28=0
var_27=0
	sdim var_24, 12
	sdim var_25, 12
/*bgscr 0,ginfo(20),ginfo(21),0,0,0
oncmd gosub *onkeyforz80pcdown,0x100
oncmd gosub *onkeyforz80pcup,0x101
oncmd gosub *onclkforz80pc,0x201
oncmd gosub *onclkforz80pc,0x202
	buffer 2, 256, 192, 1, , , 256, 192
	gsel 2,0
	mref var_17,66
	palette 0, 0, 0, 0
	palette 1, 255, 0, 0
	palette 2, 0, 255, 0
	palette 3, 0, 0, 255
	palette 4, 255, 255, 0
	palette 5, 0, 255, 255
	palette 6, 255, 0, 255
	palette 7, 255, 255, 255, 1
	
	repeat 4
	cnt2=cnt
	if cnt2=3{
	palette 0+cnt2+16,255,255,0,1
	}else{
	palette 0+cnt2+16,255,(cnt2*64),0,1
	}
	loop
	repeat 4
	cnt2=cnt
	if cnt2=3{
	palette 4+cnt2+16,0,255,255,1
	}else{
	palette 4+cnt2+16,0,255,(cnt2*64),1
	}
	loop
	repeat 4
	cnt2=cnt
	if cnt2=3{
	palette 8+cnt2+16,255,0,255,1
	}else{
	palette 8+cnt2+16,(cnt2*64),0,255,1
	}
	loop
	repeat 4
	cnt2=cnt
	if cnt2=3{
	palette 12+cnt2+16,255,255,255,1
	}else{
	palette 12+cnt2+16,(cnt2*64),(cnt2*64),(cnt2*64),1
	}
	loop
	
gsel 0,0*/
sdim var_29,65540
poke var_29,0x03,255
filenameinfoforcpmapp=""
filename=""
dircmdlines=""
dircmdlines=dir_cmdline
repeat:if strmid(dircmdlines,0,1)=" "{dircmdlines=strmid(dircmdlines,1,strlen(dircmdlines))}else{break}:loop
dircmdlineschkforoptsp=instr(dircmdlines,0," ")
if dircmdlineschkforoptsp=-1{filename=dircmdlines}else{filename=strmid(dircmdlines,0,dircmdlineschkforoptsp):filenameinfoforcpmapp=strmid(dircmdlines,dircmdlineschkforoptsp+1,256)}

exist filename
strsize2=strsize
if strsize2=-1{filename="rom.bin":exist filename:strsize2=strsize}
if strsize2=-1{}else{
sdim rom,strsize2
bload filename,rom
}
memcpy var_29,rom,strsize2,256,0
filenameinfoforcpmappdot=0
filenameinfoforcpmappdot=instr(filenameinfoforcpmapp,0,".")
memset var_29,32,11,0x5C+1
memcpy var_29,filenameinfoforcpmapp,8,0x5C+1,0
if filenameinfoforcpmappdot=-1{}else{
memcpy var_29,filenameinfoforcpmapp,3,0x5C+1+8,filenameinfoforcpmappdot+1
}
poke var_29,0x80,strlen(filenameinfoforcpmapp)
if strlen(filenameinfoforcpmapp)<=0{}else{memcpy var_29,filenameinfoforcpmapp,strlen(filenameinfoforcpmapp),0x81,0}
	if cpmwasloaded=1{
	memcpy var_29,dcdcbiosdata,5632,0xDC00,0
	poke var_29,0,0xC3
	wpoke var_29,1,0xDC00
	poke var_29,5,0xC3
	wpoke var_29,6,0xE400
	}
wpoke var_29,0xF224,0x80
var_27=256
var_20=1
sdim var_30,65536
z80hltendset 0,1
repeat
			poke stackformt@m0(0),0,peek(var_24,0)
			poke stackformt@m0(0),1,peek(var_24,1)
			poke stackformt@m0(0),2,peek(var_24,3)
			poke stackformt@m0(0),3,peek(var_24,2)
			poke stackformt@m0(0),4,peek(var_24,5)
			poke stackformt@m0(0),5,peek(var_24,4)
			poke stackformt@m0(0),6,peek(var_24,7)
			poke stackformt@m0(0),7,peek(var_24,6)
			poke stackformt@m0(1),10,peek(var_24,8)
			poke stackformt@m0(1),12,peek(var_24,10)
			wpoke stackformt@m0(0),12,var_28
			wpoke stackformt@m0(0),10,var_27
ioaddr16=getioportread16bitaddr(var_27,var_29):if ioaddr16=-1{}else{if (var_20){ioportpoke peek(ioaddr16,1),peek(var_30,ioaddr16)}else{ioportpoke peek(ioaddr16,1),peek(var_29,peek(ioaddr16,1))}/*:memcpy iomemory@m0(0),var_30,256,0,256*peek(ioaddr16,1)*/}
if peek(var_29,var_27)=0x76{z80run var_27,var_29,0:break}else{z80run var_27,var_29,0}
ioaddr16=getioportread16bitaddr(var_27,var_29):if ioaddr16=-1{ioaddr16=isioportcalled16():if ioaddr16=-1{}else{if (var_20){poke var_30,ioaddr16,ioportpeek(peek(ioaddr16,0))}else{poke var_30,peek(ioaddr16,1),ioportpeek(peek(ioaddr16,1))}/*:memcpy var_30,iomemory@m0(0),256,256*peek(ioaddr16,1),0*/}}
			poke var_24,0,peek(stack@m0(0),0)
			poke var_24,1,peek(stack@m0(0),1)
			poke var_24,2,peek(stack@m0(0),3)
			poke var_24,3,peek(stack@m0(0),2)
			poke var_24,4,peek(stack@m0(0),5)
			poke var_24,5,peek(stack@m0(0),4)
			poke var_24,6,peek(stack@m0(0),7)
			poke var_24,7,peek(stack@m0(0),6)
			wpoke var_24,8,wpeek(stack@m0(1),10)
			wpoke var_24,10,wpeek(stack@m0(1),12)
			var_28=wpeek(stack@m0(0),12)
			var_27=wpeek(stack@m0(0),10)
//gosub *label_30
var_22=var_22+1:if var_22=4800{var_22=0:await 1}
if var_27=0x100 {var_27d=0:var_27d=var_27:logmes "TPA Called!"}
	gosub *hle:loop
end
*label_30
	if ( var_22 == 0 ) {
		if ( peek(var_30, 49408) == 0 ) {
			repeat 192
				var_35 = cnt * 256
				memcpy var_17, var_30, 256, 48896 - var_35, var_35
			loop
				//gsel 1
				gsel 0
				pos 0, 0
				//gzoom 512, 384, 2, 0, 0, 256, 192
				gxc=ginfo(12)
				gyc=ginfo(13)
				if gxc=0{}else{gx=gxc}
				if gxc=0{}else{gy=gyc}
				gzoom gx, gy, 2, 0, 0, 256, 192
				gsel
		}
		/*repeat 255
			getkey var_36, cnt
			poke var_30, 49152 + cnt, var_36
		loop*/
	}
	if ( wpeek(var_30, 49424) ) {
		var_37 = wpeek(var_30, 49424) * wpeek(var_30, 49426)
		wpoke var_30, 49428, var_37 & 65535
		wpoke var_30, 49430, var_37 >> 16
	}
	if ( wpeek(var_30, 49432) ) {
		wpoke var_30, 49436, int(wpeek(var_30, 49432) / wpeek(var_30, 49434))
		wpoke var_30, 49438, wpeek(var_30, 49432) \ wpeek(var_30, 49434)
	}
	if ( peek(var_30, 49447) ) {
		repeat 192
			var_35 = cnt * 256
			memcpy var_17, var_30, 256, 48896 - var_35, var_35
		loop
		var_33 = peek(var_30, 49447)
		poke var_30, 49447, 0
		dim var_38, 6
		var_38 = peek(var_30, 49440), peek(var_30, 49441), peek(var_30, 49442), peek(var_30, 49443), peek(var_30, 49444), peek(var_30, 49445)
		gsel 2
		palcolor peek(var_30, 49446)
		var_39 = var_33
		if ( 0 ) {
			var_40++
		}
		if ( var_39 == 1 | var_40 ) {
			var_40 = 0
			line var_38(0), var_38(1), var_38(2), var_38(3)
			goto *label_31
			var_40++
		}
		if ( var_39 == 2 | var_40 ) {
			var_40 = 0
			boxf var_38(0), var_38(1), var_38(2), var_38(3)
			goto *label_31
			var_40++
		}
		if ( var_39 == 3 | var_40 ) {
			var_40 = 0
			circle var_38(0), var_38(1), var_38(2), var_38(3)
			goto *label_31
			var_40++
		}
		if ( var_39 == 4 | var_40 ) {
			var_40 = 0
			gosub *label_32
			goto *label_31
			var_40++
		}
		if ( var_39 == 5 | var_40 ) {
			var_40 = 0
			pos var_38(0), var_38(1)
			line var_38(2), var_38(1)
			line var_38(2), var_38(3)
			line var_38(1), var_38(3)
			line var_38(0), var_38(1)
			goto *label_31
			var_40++
		}
		if ( var_39 == 6 | var_40 ) {
			var_40 = 0
			circle var_38(0), var_38(1), var_38(2), var_38(3), 0
			goto *label_31
			var_40++
		}
		if ( var_39 == 7 | var_40 ) {
			var_40 = 0
			pos var_38(0), var_38(1)
			line var_38(2), var_38(3)
			line var_38(4), var_38(5)
			line var_38(0), var_38(1)
			goto *label_31
			var_40++
		}
		if ( var_39 == 8 | var_40 ) {
			var_40 = 0
			pos var_38(2), var_38(3)
			gcopy 2, var_38(0), var_38(1), var_38(4), var_38(5)
			goto *label_31
			var_40++
		}
		if ( var_39 == 9 | var_40 ) {
			var_40 = 0
			sdim var_41, 1024
			memcpy var_41, var_30, 463, , 49456
			pos var_38(0), var_38(1)
			mes var_41
			goto *label_31
		}
*label_31
		gsel
		repeat 192
			var_35 = cnt * 256
			memcpy var_30, var_17, 256, 48896 - var_35, var_35
		loop
	}
	return
*label_32
	dim var_42, 3
	dim var_43, 3
	var_42(0) = var_38(0)
	var_43(0) = var_38(1)
	var_42(1) = var_38(2)
	var_43(1) = var_38(3)
	var_42(2) = var_38(4)
	var_43(2) = var_38(5)
	repeat 3
		var_35 = cnt
		repeat 3 - var_35, var_35
			if ( var_43(var_35) > var_43(cnt) ) {
				var_42(var_35) ^= var_42(cnt)
				var_42(cnt) ^= var_42(var_35)
				var_42(var_35) ^= var_42(cnt)
				var_43(var_35) ^= var_43(cnt)
				var_43(cnt) ^= var_43(var_35)
				var_43(var_35) ^= var_43(cnt)
			}
		loop
	loop
	dim var_44, 3
	if ( var_43(1) - var_43(0) != 0 ) {
		var_44(0) = (var_42(1) - var_42(0) << 8) / (var_43(1) - var_43(0))
	}
	else {
		var_44(0) = 0
	}
	if ( var_43(2) - var_43(0) != 0 ) {
		var_44(1) = (var_42(2) - var_42(0) << 8) / (var_43(2) - var_43(0))
	}
	else {
		var_44(1) = 0
	}
	if ( var_43(2) - var_43(1) != 0 ) {
		var_44(2) = (var_42(2) - var_42(1) << 8) / (var_43(2) - var_43(1))
	}
	else {
		var_44(2) = 0
	}
	dim var_45, 2
	var_45(0) = var_42(0) << 8
	var_45(1) = var_42(0) << 8
	var_46 = var_43(0)
	if ( var_43(1) < var_43(2) ) {
		var_47 = var_43(2)
	}
	else {
		var_47 = var_43(1)
	}
	repeat 192
		if ( var_46 >= var_47 ) {
			break
		}
		if ( var_46 < var_43(1) ) {
			var_45(0) += var_44(0)
		}
		else {
			var_45(0) += var_44(2)
		}
		if ( var_46 < var_43(2) ) {
			var_45(1) += var_44(1)
		}
		else {
			var_45(1) += var_44(2)
		}
		if ( var_45(1) > var_45(0) ) {
			var_48 = var_45(0)
			var_49 = var_45(1)
		}
		else {
			var_48 = var_45(1)
			var_49 = var_45(0)
		}
		var_48 >>= 8
		var_49 >>= 8
		if ( var_46 > (-1) ) {
			line var_48, var_46, var_49, var_46
		}
		var_46++
	loop
	return
*onkeyforz80pcup
poke var_30, 49152 + wparam, 0
return
*onkeyforz80pcdown
poke var_30, 49152 + wparam, 1
wparam2=wparam
if wparam2=190{wparam2=0x2E}
if wparam2=186{wparam2=0x3A}
return
*onclkforz80pc
poke var_30, 49152 + 1, wparam
return

*hle
if fontsize=0{
hleplusxsize=8
hleplusysize=16
}else{
hleplusxsize=6
hleplusysize=8
}
//return
/*	pcaddressstack(cnt)=var_27
	spaddressstack(cnt)=var_28
	registerstack(cnt)=var_24*/
switch var_27
case 0x0005
logmes "cpmsyscalled:"+peek(var_24,3)

poke var_24,0,0
switch peek(var_24,3)
case 0
var_27=0
swbreak
case 1
istyped=0
/*onkey gosub *hlekeyget
repeat
if peek(var_24,0)=0{}else{break}
await:loop
onkey 0*/
hlekeygetenabled=1
//if peek(var_24,0)=0{}else{wparam2=0}
//repeat
poke var_24,0,wparam2
//if peek(var_24,0)=0{}else{break}
//loop
wparam2=0
if peek(var_24,0)=0{hlekeygetenabled=0}else{istyped=1}
hlekeygetenabled=0
swbreak
case 2
//hleplusysize=0
/*if peek(var_24,4)=0xC{nowgsel=ginfo(3):gsel 0:cls 4:gsel 2:sdim var17clr,varsize(var_17)+1:memcpy var_17,var17clr,varsize(var_17),0,0:memcpy var_30,var17clr,varsize(var_17),48896-varsize(var_17)+256,0:gsel nowgsel:poke var_30, 49440, 0:poke var_30, 49441, 0:if ( var_20 ){gosub *label_30}}else{
poke var_30, 49446,7
		poke var_30, 49447, 9
showstr=""
if peek(var_24,5)=0xA{}else{
if peek(var_24,5)=0xD{poke var_30, 49441, peek(var_30, 49441)+hleplusysize:poke var_30, 49440, 0:if peek(var_30, 49441)>=191{poke var_30, 49441, peek(var_30, 49441)-hleplusysize:nowgsel=ginfo(3):gsel 2:pos 0,0:gcopy 2,0,hleplusysize,256,192-hleplusysize:palcolor 0:boxf 0,192-hleplusysize,256,192:/*sdim var17clr,varsize(var_17)-(256*hleplusysize):memcpy var_17,var17clr,varsize(var_17)-(256*hleplusysize),0,0:memcpy var_30,var17clr,varsize(var_17)-(256*hleplusysize),48896,0*/:/*poke var_30, 49441, peek(var_30, 49441)-hleplusysize*//*:gsel nowgsel:gosub *label_31}:if ( var_20 ){gosub *label_30}}else{
poke var_30,49456,peek(var_24,5)
if ( var_20 ){gosub *label_30}
if ( var_20 ){poke var_30, 49440, peek(var_30, 49440)+hleplusxsize}
memset var_30,0,463,49456
}
}
}*/
showstr=""
poke showstr,0,peek(var_24,5)
mes showstr,1

swbreak
case 3//reader input
poke var_24,0,0x1A
swbreak
case 4
swbreak
case 5
stringforvar24=""
lpoke stringforvar24,0,peek(var_24,5)
logmes "printer output:"+stringforvar24
swbreak
case 6
//logmes "list output:"+peek(var_24,5)
if peek(var_24,4)=0xFF{
istyped=0
hlekeygetenabled=1
//repeat
wparam2=0
wparam2=_getch()
poke var_24,0,wparam2
//if peek(var_24,0)=0{}else{break}
//loop
wparam2=0
if peek(var_24,0)=0{hlekeygetenabled=0}else{istyped=1}
hlekeygetenabled=0
}else{
if peek(var_24,4)=0xFD{
istyped=0
hlekeygetenabled=1
//repeat
wparam2=0
wparam2=_getch()
poke var_24,0,wparam2
/*poke var_30,49456,peek(var_24,0)
if ( var_20 ){gosub *label_30}
if peek(var_24,0)=0{}else{break}*/
showstr=""
poke showstr,0,wparam2
mes showstr,1
//loop
wparam2=0
}else{
if peek(var_24,5)=0xFE{
if _kbhit(){poke var_24,0,1}else{poke var_24,0,0}
}else{
/*if peek(var_24,5)=0xC{nowgsel=ginfo(3):gsel 0:cls 4:gsel 2:sdim var17clr,varsize(var_17):memcpy var_17,var17clr,varsize(var_17),0,0:memcpy var_30,var17clr,varsize(var_17),48896,0:gsel nowgsel:poke var_30, 49440, 0:poke var_30, 49441, 0:if ( var_20 ){gosub *label_30}}else{
poke var_30, 49446,7
		poke var_30, 49447, 9
showstr=""
if peek(var_24,5)=0xA{}else{
if peek(var_24,5)=0xD{poke var_30, 49441, peek(var_30, 49441)+hleplusysize:poke var_30, 49440, 0:if peek(var_30, 49441)>=191{poke var_30, 49441, peek(var_30, 49441)-hleplusysize:nowgsel=ginfo(3):gsel 2:pos 0,0:gcopy 2,0,hleplusysize,256,192-hleplusysize:palcolor 0:boxf 0,192-hleplusysize,256,192:/*sdim var17clr,varsize(var_17)-(256*hleplusysize):memcpy var_17,var17clr,varsize(var_17)-(256*hleplusysize),0,0:memcpy var_30,var17clr,varsize(var_17)-(256*hleplusysize),48896,0*//*:gsel nowgsel:gosub *label_31}:if ( var_20 ){gosub *label_30}}else{
poke var_30,49456,peek(var_24,5)
if ( var_20 ){gosub *label_30}
if ( var_20 ){poke var_30, 49440, peek(var_30, 49440)+hleplusxsize}
memset var_30,0,463,49456
}
}
}*/

showstr=""
poke showstr,0,peek(var_24,5)
mes showstr,1
}
}
}
swbreak
case 7
poke var_24,0,0
swbreak
case 8
poke var_24,0,255
swbreak
case 9
cntix=0:cntixold=2:cntix2=0
poke var_30, 49446,7
		poke var_30, 49447, 9
showstr="":chkx0a0d=0:mesaddr=peek(var_24,5)+(peek(var_24,4)<<8)
repeat 463
if peek(var_29,cnt+mesaddr)=0x24{break}
/*if wpeek(var_29,cnt+mesaddr)=0x0A0D{
cntixold=cntix
cntix=cnt+2
if ( var_20 ){gosub *label_30}
poke var_30, 49447, 9
repeat cntix-cntixold
poke var_30,49456+cnt,0
loop
if ( var_20 ){poke var_30, 49441, peek(var_30, 49441)+hleplusysize}
if ( var_20 ){poke var_30, 49440, 0}
if peek(var_30, 49441)>=191{poke var_30, 49441, peek(var_30, 49441)-hleplusysize:nowgsel=ginfo(3):gsel 2:pos 0,0:gcopy 2,0,hleplusysize,256,192-hleplusysize:palcolor 0:boxf 0,192-hleplusysize,256,192:/*sdim var17clr,varsize(var_17)-(256*hleplusysize):memcpy var_17,var17clr,varsize(var_17)-(256*hleplusysize),0,0:memcpy var_30,var17clr,varsize(var_17)-(256*hleplusysize),48896,0*//*:gsel nowgsel:gosub *label_31}
cntix2=cnt
continue cntix
}
poke var_30,49456+cnt-cntix,wpeek(var_29,cnt+mesaddr)
//if chkx0a0d=1{break}
cntix2=cnt*/
showstr=""
poke showstr,0,peek(var_29,cnt+mesaddr)
mes showstr,1
loop:chkx0a0d=0
/*if ( var_20 ){gosub *label_30}
if ( var_20 ){poke var_30, 49440, peek(var_30, 49440)+((cntix2-(cntix-2))*hleplusxsize)}
memset var_30,0,463,49456*/

showstr=""
mes showstr
//mes showstr,1
//var_27=var_28

swbreak
case 10
/*stringforinputoutput="":cnt2=0
repeat// 0x100
stringforinputoutputx=""
lpoke stringforinputoutputx,0,wparam2
if wparam2=0{}else{wparam2=0}
if lpeek(stringforinputoutputx,0)=13{break}
if stringforinputoutputx="\n"{break}
stringforinputoutput=stringforinputoutput+stringforinputoutputx
//cnt2=cnt
//mesfromminifont stringforinputoutputx,1
if stringforinputoutputx=""{}else{
	//hleplusysize=0
	if peek(stringforinputoutputx,0)=0xC{nowgsel=ginfo(3):gsel 0:cls 4:gsel 2:sdim var17clr,varsize(var_17)+1:memcpy var_17,var17clr,varsize(var_17),0,0:memcpy var_30,var17clr,varsize(var_17),48896-varsize(var_17)+256,0:gsel nowgsel:poke var_30, 49440, 0:poke var_30, 49441, 0:if ( var_20 ){gosub *label_30}}else{
	poke var_30, 49446,7
			poke var_30, 49447, 9
	showstr=""
	if peek(stringforinputoutputx,0)=0xA{}else{
	if peek(stringforinputoutputx,0)=0xD{poke var_30, 49441, peek(var_30, 49441)+hleplusysize:poke var_30, 49440, 0:if peek(var_30, 49441)>=191{poke var_30, 49441, peek(var_30, 49441)-hleplusysize:nowgsel=ginfo(3):gsel 2:pos 0,0:gcopy 2,0,hleplusysize,256,192-hleplusysize:palcolor 0:boxf 0,192-hleplusysize,256,192:/*sdim var17clr,varsize(var_17)-(256*hleplusysize):memcpy var_17,var17clr,varsize(var_17)-(256*hleplusysize),0,0:memcpy var_30,var17clr,varsize(var_17)-(256*hleplusysize),48896,0*//*:gsel nowgsel:gosub *label_31}:if ( var_20 ){gosub *label_30}}else{
	poke var_30,49456,peek(stringforinputoutputx,0)
	if ( var_20 ){gosub *label_30}
	if ( var_20 ){poke var_30, 49440, peek(var_30, 49440)+hleplusxsize}
	}
	}
	}
}
nowgsel=ginfo(3)
gsel 0
			pos 0, 0
				gxc=ginfo(12)
				gyc=ginfo(13)
				if gxc=0{}else{gx=gxc}
				if gxc=0{}else{gy=gyc}
				gzoom gx, gy, 2, 0, 0, 256, 192
gsel nowgsel
//	if ( var_20 ){nowgsel=ginfo(3):gsel 0:redraw 1:redraw 0:gsel nowgsel}
await 1:loop:poke var_30, 49441, peek(var_30, 49441)+hleplusysize:poke var_30, 49440, 0:cnt2=strlen(stringforinputoutput)
if cnt2>peek(var_29,(peek(var_24,5)+(peek(var_24,4)<<8))){cnt2=(peek(var_24,5)+(peek(var_24,4)<<8))}
poke var_29,peek(var_24,5)+(peek(var_24,4)<<8)+1,cnt2
memcpy var_29,stringforinputoutput,cnt2,peek(var_24,5)+(peek(var_24,4)<<8)+2,0
poke var_29,peek(var_24,5)+(peek(var_24,4)<<8)+2+cnt2,0
logmes "address:"+strf("%04X",str(peek(var_24,5)+(peek(var_24,4)<<8)))
sdim messagedatadump,cnt2
memcpy messagedatadump,var_29,cnt2,0,(peek(var_24,5)+(peek(var_24,4)<<8))+2
stringforinputoutputx=""*/
messagedatadump=""
input messagedatadump,(peek(var_24,5)+(peek(var_24,4)<<8)),2
poke var_29,peek(var_24,5)+(peek(var_24,4)<<8)+1,strlen(messagedatadump)
memcpy var_29,messagedatadump,strlen(messagedatadump),(peek(var_24,5)+(peek(var_24,4)<<8))+2,0
/*showstr=""
poke showstr,0,peek(var_24,5)
mes showstr,1*/
logmes "inputdata:"+messagedatadump
memset var_30,0,463,49456
swbreak
case 11
if wparam2=0{poke var_24,0,0}else{poke var_24,0,1}
await 1
swbreak
case 12
poke var_24,0,0x22
poke var_24,7,0x22
swbreak
case 13
wpoke var_29,0xF224,0x80
swbreak
case 14
poke var_24,0,0xFF
if peek(var_24,5)<=15{drive=0:drive=peek(var_24,5):poke var_24,0,0:logmes drive}else{poke var_24,0,0xFF:poke var_24,6,4}
swbreak
case 15
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
//poke var_29,fcbaddr+1+8+3+1+1+16+1,0
fcbcrx=0
gosub *hlefcbcrxex
exist fcbfnamenameplsformat
strsize2=strsize
ex = (peek(var_29,fcbaddr + 12) & 0x1f) | (peek(var_29,fcbaddr + 13) << 5)
block = strsize2 - ex * 16384
repeat 16
if (block > cnt*1024) = cnt+1 {
poke var_29,fcbaddr+cnt+16,0
}
loop
if strsize2=-1{
poke var_24,0,0xFF
}else{
lpoke var_29,fcbaddr+1+8+3+1+1+1,strsize2
lpoke var_29,fcbaddr+32,0
if (block < 0) = 0{
if (block < 16384) = ((block >> 7) & 0xff){
lpoke var_29,fcbaddr+32,128
}
}
randomize:poke var_24,0,0}

swbreak
case 16
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
//poke var_29,fcbaddr+1+8+3+1+1+16+1,0
fcbcrx=0
gosub *hlefcbcrxex
exist fcbfnamenameplsformat
strsize2=strsize
if strsize2=-1{
poke var_24,0,0xFF
}else{
lpoke var_29,fcbaddr+1+8+3+1+1+1,0
randomize:poke var_24,0,0}

swbreak
case 17
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
//poke var_29,fcbaddr+1+8+3+1+1+16+1,0
fcbfnamenameplsformattlx="":fcbfnamenameplsformattl=""
repeat strlen(fcbfnamenameplsformat)
fcbfnamenameplsformattlx=strmid(fcbfnamenameplsformat,cnt,1)
if fcbfnamenameplsformattlx="?"{fcbfnamenameplsformattlx="*"}
fcbfnamenameplsformattl=fcbfnamenameplsformattl+fcbfnamenameplsformattlx
loop
if fcbfnamenameplsformattl="********.***"{fcbfnamenameplsformattl="*.*"}
fcbfnamenameplsformatdirlist="":fcbfnamenameplsformatdirlist2="":fcbfnamenameplsformatdirlistformat=""
fcbfnamenameplsformatdirlistfname=""
dirlist fcbfnamenameplsformatdirlist,fcbfnamenameplsformattl,1
filestatforfsearchi=0
filestatforfsearch=stat
notesel fcbfnamenameplsformatdirlist
noteget fcbfnamenameplsformatdirlist2,0
fcbfnamenameplsformatdirlistfname=fcbfnamenameplsformatdirlist2
fcbfnamenameplsformatdirlistdot=0
fcbfnamenameplsformatdirlistdot=instr(fcbfnamenameplsformatdirlist2,0,".")
if fcbfnamenameplsformatdirlistdot=-1{
fcbfnamenameplsformatdirlistfname=fcbfnamenameplsformatdirlist2
}else{
fcbfnamenameplsformatdirlistfname=strmid(fcbfnamenameplsformatdirlist2,0,fcbfnamenameplsformatdirlistdot)
fcbfnamenameplsformatdirlistformat=strmid(fcbfnamenameplsformatdirlist2,fcbfnamenameplsformatdirlistdot+1,3)
}
randomize:poke var_24,0,0
repeat 32
poke var_29,wpeek(var_29,0xF224)+cnt,0
loop
memcpy var_29,fcbfnamenameplsformatdirlistfname,0x08,wpeek(var_29,0xF224)+1,0
memcpy var_29,fcbfnamenameplsformatdirlistformat,0x03,wpeek(var_29,0xF224)+1+8,0
exist fcbfnamenameplsformatdirlist2
logmes fcbfnamenameplsformatdirlist2
strsize2=strsize
ex = (peek(var_29,fcbaddr + 12) & 0x1f) | (peek(var_29,fcbaddr + 13) << 5)
block = strsize2 - ex * 16384
//block=strsize
//if block=-1{}else{
	if (strsize2 < 16384) = ((strsize2 >> 7) & 0xff){poke var_29,wpeek(var_29,0xF224)+13,127}
repeat 16
if (strsize2 > cnt*1024) = cnt+1 {
poke var_29,wpeek(var_29,0xF224)+cnt+16,0
}
loop
//}
logmes fcbfnamenameplsformatdirlistfname

/*exist fcbfnamenameplsformat
strsize2=strsize*/
if filestatforfsearch=0{
poke var_24,0,0xFF
poke var_24,6,0
}else{
//lpoke var_29,fcbaddr+1+8+3+1+1+1,0
}

swbreak
case 18
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
fcbfnamenameplsformatdirlist2="":fcbfnamenameplsformatdirlistformat=""
fcbfnamenameplsformatdirlistfname=""
filestatforfsearchi=filestatforfsearchi+1
if filestatforfsearchi=filestatforfsearch{
poke var_24,0,0xFF
poke var_24,6,0
filestatforfsearch=0
filestatforfsearchi=0
fcbfnamenameplsformatdirlist="":fcbfnamenameplsformatdirlist2="":fcbfnamenameplsformatdirlistformat=""
fcbfnamenameplsformatdirlistfname="":filestatforfsearchi=0}else{
notesel fcbfnamenameplsformatdirlist
fcbfnamenameplsformatdirlist2=""
memset fcbfnamenameplsformatdirlist2,0,64,0
noteget fcbfnamenameplsformatdirlist2,filestatforfsearchi
fcbfnamenameplsformatdirlistdot=0
fcbfnamenameplsformatdirlistdot=instr(fcbfnamenameplsformatdirlist2,0,".")
if fcbfnamenameplsformatdirlistdot=-1{
	memset fcbfnamenameplsformatdirlistfname,0,64,0
	memset fcbfnamenameplsformatdirlistformat,0,64,0
fcbfnamenameplsformatdirlistfname=fcbfnamenameplsformatdirlist2
}else{
	fcbfnamenameplsformatdirlistfname=""
	fcbfnamenameplsformatdirlistformat=""
	memset fcbfnamenameplsformatdirlistfname,0,64,0
	memset fcbfnamenameplsformatdirlistformat,0,64,0
fcbfnamenameplsformatdirlistfname=strmid(fcbfnamenameplsformatdirlist2,0,fcbfnamenameplsformatdirlistdot)
fcbfnamenameplsformatdirlistformat=strmid(fcbfnamenameplsformatdirlist2,fcbfnamenameplsformatdirlistdot+1,3)
}
if filestatforfsearchi>=filestatforfsearch{
poke var_24,0,0xFF
poke var_24,6,0
filestatforfsearch=0
filestatforfsearchi=0
}else{
randomize:poke var_24,0,0
repeat 32
poke var_29,wpeek(var_29,0xF224)+cnt,0
loop
memset var_29,0,11,wpeek(var_29,0xF224)+1
memcpy var_29,fcbfnamenameplsformatdirlistfname,0x08,wpeek(var_29,0xF224)+1,0
memcpy var_29,fcbfnamenameplsformatdirlistformat,0x03,wpeek(var_29,0xF224)+1+8,0
exist fcbfnamenameplsformatdirlist2
strsize2=strsize
ex = (peek(var_29,fcbaddr + 12) & 0x1f) | (peek(var_29,fcbaddr + 13) << 5)
block = strsize2 - ex * 16384
//block=strsize
//if block=-1{}else{
	if (strsize2 < 16384) = ((strsize2 >> 7) & 0xff){poke var_29,wpeek(var_29,0xF224)+13,127}
repeat 16
if (strsize2 > cnt*1024) = cnt+1 {
poke var_29,wpeek(var_29,0xF224)+cnt+16,0
}
loop
//}
logmes fcbfnamenameplsformatdirlistfname
}
//lpoke var_29,fcbaddr+1+8+3+1+1+1,0
}
swbreak
case 19
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
exist fcbfnamenameplsformat
strsize2=strsize
if strsize2=-1{poke var_24,0,0xFF}else{
sdim fcbreaddatastr,256
delete fcbfnamenameplsformat
randomize:poke var_24,0,0}
swbreak
case 20
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
exist fcbfnamenameplsformat
strsize2=strsize
//<fcbcr*128
if strsize2=-1{poke var_24,0,0x01}else{
sdim fcbreaddatastr,256
bload fcbfnamenameplsformat,fcbreaddatastr,256,fcbcrx*128
logmes fcbcrx
//poke var_29,fcbaddr+1+8+3+1+1+16+1,peek(var_29,fcbaddr+1+8+3+1+1+16+1)+1
memcpy var_29,fcbreaddatastr,128,wpeek(var_29,0xF224),0
/*repeat 128
poke var_29,wpeek(var_29,0xF224)+cnt,peek(fcbreaddatastr,cnt)
loop*/
gosub *hlefcbcrxex
//if strsize2>fcbcr*128{poke var_24,0,0x00}else{
if (strsize2-fcbcrx)<128{memset var_29,0x1a,128-(strsize2-fcbcrx*128),wpeek(var_29,0xF224)+(strsize2-fcbcrx)}
poke var_24,0,0
if strsize2>fcbcrx*128{poke var_24,0,0}else{
poke var_24,0,1}}
swbreak
case 21
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
exist fcbfnamenameplsformat
strsize2=strsize
if strsize2=-1{poke var_24,0,0xFF}else{
//if strsize2<fcbcr*128{poke var_24,0,0xFF}else{
sdim fcbreaddatastr,strsize2+128
bload fcbfnamenameplsformat,fcbreaddatastr
memcpy fcbreaddatastr,var_29,128,fcbcrx*128,wpeek(var_29,0xF224)
bsave fcbfnamenameplsformat,fcbreaddatastr
//poke var_29,fcbaddr+1+8+3+1+1+16+1,peek(var_29,fcbaddr+1+8+3+1+1+16+1)+1
gosub *hlefcbcrxex
if strsize2>fcbcrx*128{poke var_24,0,0x00}else{
randomize:poke var_24,0,1}}
swbreak
case 22
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
sdim fcbreaddatastr,128*fcbcr
if fcbfnamenameplsformat=""{randomize:poke var_24,0,0xFF}else{
bsave fcbfnamenameplsformat,fcbreaddatastr
randomize:poke var_24,0,0
}
swbreak
case 23
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
fcbfnamenameplsformatbak=""
exist fcbfnamenameplsformat
strsize2=strsize
fcbfnamenameplsformatbak=fcbfnamenameplsformat
if strsize2=-1{poke var_24,0,0xFF}else{
ex = (peek(var_29,fcbaddr + 12) & 0x1f) | (peek(var_29,fcbaddr + 13) << 5)
block = strsize2 - ex * 16384
repeat 16
if (block > cnt*1024) = cnt+1 {
poke var_29,fcbaddr+cnt+16,0
}
loop
sdim fcbreaddatastr,256
fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)+16
gosub *hlefcbfileread
bcopy fcbfnamenameplsformatbak,fcbfnamenameplsformat
delete fcbfnamenameplsformatbak
randomize:poke var_24,0,0}
swbreak
case 24
wpoke var_24,6,0
swbreak
case 25
poke var_24,0,drive
swbreak
case 26
logmes "address:"+strf("%04X",str(fcbaddr))
wpoke var_29,0xF224,peek(var_24,5)+(peek(var_24,4)<<8)
swbreak
case 28
swbreak
case 29
wpoke var_24,6,0
swbreak
case 30
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
//poke var_29,fcbaddr+1+8+3+1+1+16+1,0
fcbcrx=0
gosub *hlefcbcrxex
exist fcbfnamenameplsformat
strsize2=strsize
if strsize2=-1{
poke var_24,0,0xFF
}else{
ex = (peek(var_29,fcbaddr + 12) & 0x1f) | (peek(var_29,fcbaddr + 13) << 5)
block = strsize2 - ex * 16384
if (block < 0) = 0{
if (block < 16384) = ((block >> 7) & 0xff){
lpoke var_29,fcbaddr+32,127
}
}
randomize:poke var_24,0,0}

swbreak
case 32
if peek(var_24,5)=0xFF{poke var_24,0,userid}else{userid=peek(var_24,5)}
swbreak
case 33
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
exist fcbfnamenameplsformat
strsize2=strsize
//<fcbcr*128
if strsize2=-1{poke var_24,0,0x01}else{
sdim fcbreaddatastr,256
fcbcrx=peek(var_29,fcbaddr+33) | (peek(var_29,fcbaddr+34) << 8)
bload fcbfnamenameplsformat,fcbreaddatastr,256,fcbcrx*128
logmes fcbcrx
//poke var_29,fcbaddr+1+8+3+1+1+16+1,peek(var_29,fcbaddr+1+8+3+1+1+16+1)+1
memcpy var_29,fcbreaddatastr,128,wpeek(var_29,0xF224),0
/*repeat 128
poke var_29,wpeek(var_29,0xF224)+cnt,peek(fcbreaddatastr,cnt)
loop*/
fcbcrx=fcbcrx-1
gosub *hlefcbcrxex
fcbcrx=fcbcrx+1
//if strsize2>fcbcr*128{poke var_24,0,0x00}else{
if (strsize2-fcbcrx)<128{memset var_29,0x1a,128-(strsize2-fcbcrx*128),wpeek(var_29,0xF224)+(strsize2-fcbcrx)}
poke var_24,0,0
if strsize2>fcbcrx*128{poke var_24,0,0}else{
poke var_24,0,1}}
swbreak
case 34
case 40
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
exist fcbfnamenameplsformat
strsize2=strsize
if strsize2=-1{poke var_24,0,2}else{
//if strsize2<fcbcr*128{poke var_24,0,0xFF}else{
fcbcrx=peek(var_29,fcbaddr+33) | (peek(var_29,fcbaddr+34) << 8)
sdim fcbreaddatastr,fcbcrx*128+128
bload fcbfnamenameplsformat,fcbreaddatastr
memcpy fcbreaddatastr,var_29,128,fcbcrx*128,wpeek(var_29,0xF224)
bsave fcbfnamenameplsformat,fcbreaddatastr
//poke var_29,fcbaddr+1+8+3+1+1+16+1,peek(var_29,fcbaddr+1+8+3+1+1+16+1)+1
fcbcrx=fcbcrx-1
gosub *hlefcbcrxex
fcbcrx=fcbcrx+1
if strsize2>fcbcrx*128{poke var_24,0,0x00}else{
randomize:poke var_24,0,2}}
swbreak
case 35
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
//poke var_29,fcbaddr+1+8+3+1+1+16+1,0
fcbcrx=0
gosub *hlefcbcrxex
exist fcbfnamenameplsformat
strsize2=strsize
if strsize2=-1{
poke var_24,0,0xFF
poke var_24,6,0x00
}else{
strsize3=strsize2 >> 7
poke var_29,fcbaddr+33,(strsize3 & 0xff)
poke var_29,fcbaddr+34,((strsize3 >> 8) & 0xff)
poke var_29,fcbaddr+35,((strsize3 >> 16) & 0xff)
randomize:poke var_24,0,0}
if fcbfnamenameplsformat=""{
poke var_24,0,0xFF
poke var_24,6,0x00}
swbreak
case 36
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
record=peek(var_29,fcbaddr+32) & 0x7f
record=record+(peek(var_29,fcbaddr+1+8+3) & 0x1f) << 7
record=record+(peek(var_29,fcbaddr+1+8+3+1) << 12)
record=record+(peek(var_29,fcbaddr+1+8+3+1+1) << 20)
poke var_29,fcbaddr+33,record & 0xff
poke var_29,fcbaddr+34,(record >> 8) & 0xff
poke var_29,fcbaddr+35,(record >> 16) & 0xff
swbreak
case 0
fcbaddr=0
showstr="":chkx0a0d=0:fcbaddr=peek(var_24,5)+(peek(var_24,4)<<8)
gosub *hlefcb
exist fcbfnamenameplsformat
strsize2=strsize
if strsize2=-1{poke var_24,0,0xFF}else{
	sdim execdataforcpm,0xDB00
bload fcbfnamenameplsformat,execdataforcpm
memcpy var_29,execdataforcpm,0xDB00,0x100,0
		var_40 = 0
		wpoke var_29, var_28, var_27
		//var_27 = wpeek(var_29, var_27)
		var_27 = 0x100
		var_28 -= 2
		var_54 = 17
return}
swbreak
case 110
if wpeek(var_24,4)=0xffff{
poke var_24,0,0
}else{
}
swbreak
default
logmes "unimplemented"
swbreak
swend

		var_40 = 0
		var_27 = wpeek(var_29, var_28)
		var_28 += 2
		var_54 = 10
		logmes "address:"+strf("%04X",str(var_27))
		logmes "rtedaddress:"+strf("%04X",str(wpeek(var_29, var_28)))
if peek(var_30, 49441)>=191{poke var_30, 49441, peek(var_30, 49441)-hleplusysize:nowgsel=ginfo(3):gsel 2:pos 0,0:gcopy 2,0,hleplusysize,256,192-hleplusysize:palcolor 0:boxf 0,192-hleplusysize,256,192:/*sdim var17clr,varsize(var_17)-(256*hleplusysize):memcpy var_17,var17clr,varsize(var_17)-(256*hleplusysize),0,0:memcpy var_30,var17clr,varsize(var_17)-(256*hleplusysize),48896,0*/:/*poke var_30, 49441, peek(var_30, 49441)-hleplusysize*/:gsel nowgsel:gosub *label_31
nowgsel=ginfo(3)
gsel 0
			pos 0, 0
				gxc=ginfo(12)
				gyc=ginfo(13)
				if gxc=0{}else{gx=gxc}
				if gxc=0{}else{gy=gyc}
				gzoom gx, gy, 2, 0, 0, 256, 192
gsel nowgsel}//:if ( var_20 ){gosub *label_30}
swbreak
case 0xDC00

swbreak
swend

if var_27>=0xFF80 and var_27<=0xFFFF{
logmes "BIOS Called:"+(var_27-0xFF80)
switch var_27-0xFF80
case 0
var_27=0
swbreak
case 1
var_27=0
swbreak
case 2
if wparam2=0xFF{poke var_24,0,0}else{poke var_24,0,1}
await 1
swbreak
case 3
istyped=0
/*onkey gosub *hlekeyget
repeat
if peek(var_24,0)=0{}else{break}
await:loop
onkey 0*/
hlekeygetenabled=1
//repeat
poke var_24,0,wparam2
poke var_30,49456,peek(var_24,0)
if ( var_20 ){gosub *label_30}
memset var_30,0,463,49456
//if peek(var_24,0)=0{}else{break}
//loop
wparam2=0
if peek(var_24,0)=0{hlekeygetenabled=0}else{istyped=1}
hlekeygetenabled=0
swbreak
case 4
if peek(var_24,5)=0xC{nowgsel=ginfo(3):gsel 0:cls 4:gsel 2:sdim var17clr,varsize(var_17):memcpy var_17,var17clr,varsize(var_17),0,0:memcpy var_30,var17clr,varsize(var_17),48896,0:gsel nowgsel:poke var_30, 49440, 0:poke var_30, 49441, 0:if ( var_20 ){gosub *label_30}}else{
poke var_30, 49446,7
		poke var_30, 49447, 9
showstr=""
if peek(var_24,5)=0xA{}else{
if peek(var_24,5)=0xD{poke var_30, 49441, peek(var_30, 49441)+hleplusysize:poke var_30, 49440, 0:if peek(var_30, 49441)>=191{poke var_30, 49441, peek(var_30, 49441)-hleplusysize:nowgsel=ginfo(3):gsel 2:pos 0,0:gcopy 2,0,hleplusysize,256,192-hleplusysize:palcolor 0:boxf 0,192-hleplusysize,256,192:/*sdim var17clr,varsize(var_17)-(256*hleplusysize):memcpy var_17,var17clr,varsize(var_17)-(256*hleplusysize),0,0:memcpy var_30,var17clr,varsize(var_17)-(256*hleplusysize),48896,0*/:gsel nowgsel:gosub *label_31:gosub *label_31}:if ( var_20 ){gosub *label_30}}else{
poke var_30,49456,peek(var_24,5)
if ( var_20 ){gosub *label_30}
if ( var_20 ){poke var_30, 49440, peek(var_30, 49440)+hleplusxsize}
memset var_30,0,463,49456
}
}
}
//mes showstr,1

swbreak
swend
}
/*			poke stack@m0(0),0,peek(var_24,0)
			poke stack@m0(0),1,peek(var_24,1)
			poke stack@m0(0),2,peek(var_24,3)
			poke stack@m0(0),3,peek(var_24,2)
			poke stack@m0(0),4,peek(var_24,5)
			poke stack@m0(0),5,peek(var_24,4)
			poke stack@m0(0),6,peek(var_24,7)
			poke stack@m0(0),7,peek(var_24,6)
			poke stack@m0(1),10,peek(var_24,8)
			poke stack@m0(1),12,peek(var_24,10)*/
return

*hlefcb
fcbdrivecode=0
fcbdrivecode=peek(var_29,fcbaddr)
logmes "address:"+strf("%04X",str(fcbaddr))
gosub *hlefcbfileread
fcbex=peek(var_29,fcbaddr+1+8+3)
fcbrc=peek(var_29,fcbaddr+1+8+3+1+1+1+1)
fcbcr=peek(var_29,fcbaddr+32)
fcbcrx=(fcbcr & 0x7F)+((peek(var_29,fcbaddr+1+8+3)&0x1F)<<7)+((peek(var_29,fcbaddr+1+8+3+1))<<12)+((peek(var_29,fcbaddr+1+8+3+1+1))<<20)
poke var_29,0x7C,fcbcr
return
*hlefcbcrxex
fcbcrx=fcbcrx+1
poke var_29,fcbaddr+32,fcbcrx & 0x7f
poke var_29,fcbaddr+1+8+3,(fcbcrx >> 7) & 0x1f
poke var_29,fcbaddr+1+8+3+1,(fcbcrx >> 12) & 0xff
poke var_29,fcbaddr+1+8+3+1+1,(fcbcrx >> 20) & 0xff
fcbcrx=fcbcrx-1
return

*hlekeyget
wparam2=wparam
return

*hlefcbfileread
fcbfname=""
memcpy fcbfname,var_29,8,0,fcbaddr+1
//dupptr fcbfname,varptr(var_29)+fcbaddr+1,8,2
instrforfcbfname=instr(fcbfname,0," ")
fcbfname2=""
if instrforfcbfname=-1{
fcbfname2=fcbfname
}else{
fcbfname2=strmid(fcbfname,0,instrforfcbfname)
}
fcbfnameformat=""
memcpy fcbfnameformat,var_29,3,0,fcbaddr+1+8
instrforfcbfnameformat=0
instrforfcbfnameformat=instr(fcbfnameformat,0," ")
fcbfnameformat2=""
if instrforfcbfnameformat=-1{
fcbfnameformat2=fcbfnameformat
}else{
fcbfnameformat2=strmid(fcbfnameformat,0,instrforfcbfnameformat)
}
//dupptr fcbfnameformat,varptr(var_29)+fcbaddr+1+8,3,2
fcbfnamenameplsformat=""
if fcbfnameformat2="   " or fcbfnameformat2=""{
fcbfnamenameplsformat=fcbfname2
}else{
fcbfnamenameplsformat=fcbfname2+"."+fcbfnameformat2
}
logmes "fname:"+fcbfnamenameplsformat
memcpy var_29,fcbfname,0x08,0x5D,0
memcpy var_29,fcbfnameformat,0x03,0x65,0
return